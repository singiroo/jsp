RequestCounterFilter
LoginServlet

//전처리(요청이 요청을 처리할 서블릿으로 가기 전)

chain.doFilter()

//후처리(생성된 응답이 클라이언트에게 가는 중)

전처리 ==> 서블릿 ==> 후처리

1. RequestCounterFilter 전처리 부분-chain.doFilter 호출전
2. loginServlet doGet
3. RequestCounterFilter 후처리 부분 - chain.doFilter 호출 후 응답이 클라이언트에게 가는 중에..


Wrapper
	int ==> Integer


request.getParameter() 메소드는 존재(getter)

request.setParameter() 메소드는 없음(setter) 
==> 파라미터를 개발자가 임의로 수정하거나 추가할 수 없다.
==> 파라미터를 수정하기 위해서는
	HttpServletRequest 객체를 이용하여 새로운 wrapper 클래스를 생성하여
	기존 request 객체를 대체해야

request.getAttribute() 메소드는 존재(getter) 
request.setAttribute() 메소드는 존재(setter) 


filter/requestParameter.jsp에서
request.getParameterMap()메소드를 통해 얻은 Map객체에
파라미터를 임의로 추가, 수정하는 작업이 불가능

request.getParameterMap()을 통해 새로은 map 객체를 생성하고
해당 map 객체에 필요한 파라미터를 추가, 이후 프로세스에서는 새롭게 만든 map객체로 전달

1. map 객체를 조작할 Filter
2. HttpServletRequest객체를 대신할 wrapper
   HttpServletRequestWrapper 클래스를 상속
   
   
   
   
event listener ==> event handler
jQuery를 활용하여
버튼이 클릭 되었을 때 특정 로직 실행 하도록 event handler 등록
$('#btn').on('click', function(){

});

web.xml에 리스너 등록

<listener>
	<listener-class> 패키지.클래스명</listener-class>
</listener>





서버에도 갑지할 수 있는 이벤트 종류가 존재
life cycle : 어떤 객체가 생성되고, 소멸될 때 이벤트 감지
attribute : scope 객체에 속성이 추가되거나, 수정, 변경될 때 이벤트 감지
기타 등등....

								life cycle								attribute
request						ServletRequestListener				ServletRequestAttributeListener


session						HttpSessionListener					HttpSessionAttributeListener


application					ServletContextListener				ServletContextAttributeListener



logout 기능 추가
/logout url 요청시

세션에 저장된 속성제거 : session.invalidate();
응답 화면 : login.jsp

// SessionAttributeListener.attributeRemoved되었을때
   userMap에서 해당 사용자 정보 삭제
   userMap.jsp에서 로그아웃한 사용자가 안나오는 것 확인
   

   
   
   



