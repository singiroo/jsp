<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<!-- spring 컨테이너에게 건네줄 객체 생성 설명서  -->
	
	<!-- bean 태그 : 스프링 컨테이너에서 관리 될 스프링 빈 선언  
				id 속성 : 스프링 컨테이너 안에서 관리될 스프링 빈의 이름, 다른 스프링 빈과 이름이 중복되면 안된다.
						name속성을 사용해도 무방. 
						관리차원에서 id or name 한쪽만 사용할 것을 권장.
						설정시에만 사용하는 스프링 빈의 경우는 별도로 이름을 작성하지 않는 경우도 있음.
				class 속성 : 해당 스프링 빈을 만들 class 
				
		property 태그 : class의 필드(속성) ==> 스프링컨테이너가 해당 필드의 setter 메서드를 이용하여 (setter의 인자값) 
										스프링 빈을 주입 
						setter 메소드를 이용하여 클래스의 필드에 빈 객체를 주입. 결합성을 낮추기 위해-->
										
	<!-- 1. boardDao라는 이름으로 BoardDao 클래스를 이용하여 스프링 빈 생성
	     2. boardService라는 이름으로 BoardService 클래스를 이용하여 스프링 빈 생성 
	     	boardService의 boardDao 속성으로 1번에서 생성한 스프링 빈을 setter 메서드를 통해 주입  -->
	     				
	    <bean id="boardRepository" class="kr.or.ddit.board.repository.BoardRepository"/>
		
		<bean id="boardService" class="kr.or.ddit.board.service.BoardService">
			<!-- boardService가 의존하는 boardDao 스프링빈을 setter 메소드를 통해 주입(Dependency Injection)  -->
			<property name="boardRepository" ref="boardRepository"/>
			<!-- name : boardRepository => 호출할 setter의 이름
			     ref :  boardRepository => 주입할 빈의 식별자 즉, 위에 선언한 boardRepository 빈 
			     value : 주입할 값을 입력. -->
		</bean>
		<!-- boardService 빈과 클래스는 같지만 식별자가 다르기 때문에 다른 객체로 생성됨.  -->
		<bean id="boardServiceC" class="kr.or.ddit.board.service.BoardService" >
			<constructor-arg ref="boardRepository"/>
			<!-- boardServiceC 생성자의 인자로 boardRepository 빈을 주입.  -->
		</bean>
		
		<!-- person 스프링빈 등록
		     age : 30
		     boardRepository : boardDao 스프링 빈  
		     value : 고정된 값
		     ref : 다른 스프링 빈을 참조 -->
		     
		     
		<bean id="person" class="kr.or.ddit.person.model.Person">
			<property name="age" value="30"/>
			<property name="boardRepository" ref="boardRepository"/>
			<property name="birthdate" value="2020-01-01"/>
		</bean>
		
<!-- /==============================================================================================2020.11.03  -->
		
		<!-- property editor  -->
		<!-- customEditorConfigurer에 우리가 만든 CustomDateRegistrar를 등록하여 Date 형으로 형변환시
		     스프링 프레임워크가 형 변환시 사용할 수 있도록 설정한다.  -->
	<!-- 	<bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
				<property name="propertyEditorRegistrars">
					<list>
						<bean class="kr.or.ddit.config.type.CustomDateRegistrar"/>
					</list>
				</property>
			</bean> -->
		
		
		<!-- conversion service  -->
		<!-- <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
			<property name="converters">
				<set>
					<bean class="kr.or.ddit.config.type.DateStringConverter"/>
				</set>
			</property>
		</bean> -->
		
		<!-- formatting conversion service  -->
		
		<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		
		</bean>		
		
				
		
		
</beans>
