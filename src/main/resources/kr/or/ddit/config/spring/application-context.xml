<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- kr.or.ddit 패키지 하위의 클래스중 @Controller 어노테이션이 붙은 클래스를 스캔하여 스프링 빈으로 생성  -->
	
	<context:component-scan base-package="kr.or.ddit" use-default-filters="false" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>


	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- prefix : 접두어, suffix : 접미어  
			Controller 가 리턴하는 문자열에 prefix와 suffix를 적용하여 해당 경로의 파일로 응답을 생성
			LoginController.getView() ==> "login/view"
			
			prefix				viewName		suffix
			"/WEB-INF/views/" + "login/view" + ".jsp"
			==>"/WEB-INF/views/login/view.jsp"
		-->
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- @Controller, @RequestMapping, HandlerMapping, HandlerAdapter,
	     formatting conversion service, validation 등
	     spring mvc 패턴에 필요한 어노테이션, 엘리먼트 처리  -->
	<mvc:annotation-driven/>
	<!-- spring container 가 처리하지 못하는 요청을 서버에 등록된 디폴트 서블릿에 위임.  -->
	<mvc:default-servlet-handler/>
	
	<!-- <bean id="memberDao" class="kr.or.ddit.member.dao.MemberDao">
	
	</bean>
	
	<bean id="memberService" class="kr.or.ddit.member.service.MemberService">
		<property name="memberDao" ref="memberDao"/>
	</bean> -->
	
	
	
	

</beans>
